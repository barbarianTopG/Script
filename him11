local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- Async key fetch
local keyRequired
spawn(function()
    local success, response = pcall(function()
        return game:HttpGet("https://pastebin.com/raw/ZWFwRjBJ")
    end)
    keyRequired = success and response or "Key22Changed"
end)

-- Subscription keys system
local SUBSCRIPTION_URL = "https://pastebin.com/raw/ThRPn5JG"
local subscribedUsers = {}
local function fetchSubscriptions()
    local success, data = pcall(function()
        return game:HttpGet(SUBSCRIPTION_URL)
    end)
    if success then
        print("Subscription data fetched: " .. data)
        for line in data:gmatch("[^\n]+") do
            local userId, expiry = line:match("(%d+):(%d+)")
            if userId and expiry then
                subscribedUsers[tonumber(userId)] = tonumber(expiry)
                print("Loaded subscription - UserID: " .. userId .. ", Expiry: " .. expiry)
            end
        end
    else
        warn("Failed to fetch subscriptions: " .. data)
    end
end
spawn(function() fetchSubscriptions() end)

local function isSubscribed(userId)
    local expiry = subscribedUsers[userId]
    if expiry and os.time() < expiry then
        print("User " .. userId .. " is subscribed until " .. expiry)
        return true
    end
    print("User " .. userId .. " is not subscribed or expired")
    return false
end

-- Webhook setup
local WEBHOOK_URL = "https://discord.com/api/webhooks/1348317540585308261/Odr4ATl9hJMK67GOxYmSLq4sTr4B43waCLUv48LtmHIRtpBEGqt-iT-rRN803Kjh5chF"
local COOLDOWN_SECONDS = 4500
local lastFeedbackTime = 0

local function formatTime(seconds)
    local hours = math.floor(seconds / 3600)
    local minutes = math.floor((seconds % 3600) / 60)
    local secs = math.floor(seconds % 60)
    if hours > 0 then return string.format("%d hours, %d minutes", hours, minutes)
    elseif minutes > 0 then return string.format("%d minutes, %d seconds", minutes, secs)
    else return string.format("%d seconds", secs) end
end

local function sendWebhook(embedData)
    local success = pcall(function()
        local http_request = syn and syn.request or http and http.request or request or httprequest
        http_request({
            Url = WEBHOOK_URL,
            Method = "POST",
            Headers = { ["Content-Type"] = "application/json" },
            Body = HttpService:JSONEncode({ embeds = { embedData } })
        })
    end)
    return success
end

local function sendExecutionWebhook()
    spawn(function()
        local embedData = {
            title = "🚀 Script Execution",
            description = string.format("**%s** has launched the Vault", LocalPlayer.DisplayName),
            color = 7419530,
            fields = {
                { name = "🔑 Hardware ID", value = "```" .. game:GetService("RbxAnalyticsService"):GetClientId() .. "```", inline = true },
                { name = "🎮 Game ID", value = "```" .. game.PlaceId .. "```", inline = true }
            },
            footer = { text = "ComboChronicle Vault" },
            timestamp = os.date("!%Y-%m-%dT%H:%M:%SZ")
        }
        sendWebhook(embedData)
    end)
end

-- Limited script URLs
local scriptURLs = {
    [14518422161] = "https://raw.githubusercontent.com/checkurasshole/Script/refs/heads/main/Hitbox%20Gunfight%20Arena",
    [155615604] = "https://raw.githubusercontent.com/checkurasshole/Script/refs/heads/main/Prison%20Life",
    [7920018625] = "https://raw.githubusercontent.com/checkurasshole/Script/refs/heads/main/Nuke%20Tycoon%20Nuclear",
}
local defaultScriptURL = "https://raw.githubusercontent.com/checkurasshole/Script/refs/heads/main/Default"
local gameId = game.PlaceId
local scriptToLoad = scriptURLs[gameId] or defaultScriptURL

-- GUI Setup
local Window = Rayfield:CreateWindow({
    Name = "ComboChronicle Vault | NextGen",
    LoadingTitle = "Initializing Vault ❖",
    LoadingSubtitle = "By COMBO_WICK | Bang.E.Line",
    Theme = "Ocean"
})

-- Key & Credits Tab
local KeyTab = Window:CreateTab("🔑 Key & Credits", 4483362458)
KeyTab:CreateInput({
    Name = "Enter Key",
    PlaceholderText = "Type the key here...",
    RemoveTextAfterFocusLost = false,
    Callback = function(input)
        Rayfield:Notify({Title = "⏳ Checking", Content = "Verifying key...", Duration = 2})
        task.wait(0.5)
        if not keyRequired then
            Rayfield:Notify({Title = "⏳ Loading", Content = "Key not fetched yet!", Duration = 3})
            return
        end
        if input == keyRequired then
            Rayfield:Notify({Title = "✅ Success", Content = "Access granted!", Duration = 3})
            Rayfield:Destroy()
            if gameId == 5223287266 then
                spawn(function() loadstring(game:HttpGet("https://raw.githubusercontent.com/checkurasshole/Script/refs/heads/main/Phoenix%20Grounds"))() end)
                spawn(function() loadstring(game:HttpGet("https://raw.githubusercontent.com/checkurasshole/Script/refs/heads/main/Teleport%20Behind%20Player"))() end)
            else
                spawn(function() loadstring(game:HttpGet(scriptToLoad))() end)
            end
        else
            Rayfield:Notify({Title = "❌ Invalid", Content = "Join Discord for key!", Duration = 5, Image = 4483362458})
        end
    end
})
KeyTab:CreateButton({
    Name = "📋 Copy Links",
    Callback = function()
        setclipboard("Discord: discord.com/invite/mwTHaCKzhw\nYouTube: https://www.youtube.com/@COMBO_WICK")
        Rayfield:Notify({Title = "✅ Copied", Content = "Links copied!", Duration = 5})
    end
})

-- Responses Tab
local ResponseTab = Window:CreateTab("📝 Responses", 4483362458)
local ResponseSection = ResponseTab:CreateSection("✉️ Message System")
local currentResponse = ""
ResponseTab:CreateInput({
    Name = "💭 Your Message",
    PlaceholderText = "Share your thoughts...",
    RemoveTextAfterFocusLost = false,
    Callback = function(text) currentResponse = text end
})
ResponseTab:CreateButton({
    Name = "📤 Submit",
    Info = "Send to devs",
    Interact = "Submit",
    Callback = function()
        local currentTime = tick()
        local timeRemaining = COOLDOWN_SECONDS - (currentTime - lastFeedbackTime)
        if timeRemaining > 0 then
            Rayfield:Notify({Title = "⏳ Cooldown", Content = "Wait " .. formatTime(timeRemaining), Duration = 3, Image = 4483362458})
            return
        end
        if currentResponse == "" then
            Rayfield:Notify({Title = "❌ Error", Content = "Enter a message!", Duration = 3, Image = 4483362458})
            return
        end
        local embedData = {
            title = "📨 New Response",
            description = currentResponse,
            color = 3447003,
            fields = {
                { name = "👤 User", value = LocalPlayer.DisplayName, inline = true },
                { name = "🆔 ID", value = tostring(LocalPlayer.UserId), inline = true }
            },
            timestamp = os.date("!%Y-%m-%dT%H:%M:%SZ")
        }
        if sendWebhook(embedData) then
            Rayfield:Notify({Title = "✅ Sent", Content = "Message delivered!", Duration = 3, Image = 4483362458})
            lastFeedbackTime = currentTime
            currentResponse = ""
        else
            Rayfield:Notify({Title = "❌ Failed", Content = "Try again later.", Duration = 3, Image = 4483362458})
        end
    end
})
ResponseTab:CreateLabel("⏰ Cooldown: 1h 15m")
ResponseTab:CreateLabel("💡 Suggest features!")

-- News Tab
local NewsTab = Window:CreateTab("📰 News", 4483362458)
local newsParagraph = NewsTab:CreateParagraph({
    Title = "🗞️ Vault Updates",
    Content = "Loading news..."
})
local function formatNews(rawNews)
    if not rawNews or rawNews == "" then return "No news yet!" end
    local lines = {}
    for line in rawNews:gmatch("[^\n]+") do table.insert(lines, line) end
    local formatted = "✨ Vault Chronicle ✨\n════════════════════\n"
    for i, line in ipairs(lines) do
        if line:match("^NEWS:") then
            formatted = formatted .. "📰 " .. line:gsub("^NEWS:%s*", "") .. " 📰\n"
        else
            formatted = formatted .. "➤ " .. line .. "\n"
        end
        if i < #lines then formatted = formatted .. "────────────\n" end
    end
    formatted = formatted .. "════════════════════\nUpdated: " .. os.date("%Y-%m-%d %H:%M UTC")
    return formatted
end
local function updateNews()
    spawn(function()
        local success, news = pcall(function()
            return game:HttpGet("https://pastebin.com/raw/vTKfsvCr")
        end)
        if success then
            newsParagraph:Set({Title = "🗞️ Vault Updates", Content = formatNews(news)})
        else
            newsParagraph:Set({Title = "🗞️ Vault Updates", Content = formatNews("Failed to fetch news!")})
        end
    end)
end
spawn(function() wait(1) updateNews() end)
spawn(function() while true do wait(60) updateNews() end end)

-- Subscription Tab with Countdown
local SubTab = Window:CreateTab("⭐ Subscription", 4483362458)
local subParagraph = SubTab:CreateParagraph({
    Title = "⭐ Vault Elite",
    Content = "Checking subscription status..."
})
SubTab:CreateButton({
    Name = "🔗 Get Subscription",
    Callback = function()
        setclipboard("discord.com/invite/mwTHaCKzhw")
        Rayfield:Notify({Title = "⭐ Subscription", Content = "Join Discord to subscribe!", Duration = 5})
    end
})
local function updateSubStatus()
    if isSubscribed(LocalPlayer.UserId) then
        local expiry = subscribedUsers[LocalPlayer.UserId]
        local secondsLeft = expiry - os.time()
        local daysLeft = math.floor(secondsLeft / (24 * 60 * 60))
        local hoursLeft = math.floor((secondsLeft % (24 * 60 * 60)) / (60 * 60))
        subParagraph:Set({
            Content = "Status: Subscribed!\nPerks: Early updates, VIP scripts\nExpires in: " .. daysLeft .. " days, " .. hoursLeft .. " hours"
        })
    else
        subParagraph:Set({Content = "Status: Not Subscribed\nGet perks at our Discord!"})
    end
end
spawn(function()
    wait(2)
    updateSubStatus()
    while true do
        wait(60)
        updateSubStatus()
    end
end)

-- Credits Tab
local CreditsTab = Window:CreateTab("💰 Vault Credits", 4483362458)
local vaultCredits = 0
local creditsParagraph = CreditsTab:CreateParagraph({Title = "💰 Your Credits", Content = "Balance: " .. vaultCredits .. " VC"})
CreditsTab:CreateButton({
    Name = "🎁 Claim Daily",
    Callback = function()
        vaultCredits = vaultCredits + 50
        creditsParagraph:Set({Title = "💰 Your Credits", Content = "Balance: " .. vaultCredits .. " VC"})
        Rayfield:Notify({Title = "💰 Claimed", Content = "+50 Vault Credits!", Duration = 3})
        sendWebhook({
            title = "💰 Credit Claim",
            description = LocalPlayer.DisplayName .. " claimed 50 VC",
            color = 65280,
            timestamp = os.date("!%Y-%m-%dT%H:%M:%SZ")
        })
    end
})

-- Store Tab
local StoreTab = Window:CreateTab("🛒 Store", 4483362458)
StoreTab:CreateSection("💼 Premium Scripts")

local storeItems = {
    {name = "Admin Commands", price = 250, id = "admin"},
    {name = "Silent Aim", price = 500, id = "silentaim"},
    {name = "Server Crasher", price = 750, id = "crasher"}
}

for _, item in ipairs(storeItems) do
    StoreTab:CreateButton({
        Name = item.name .. " - " .. item.price .. " VC",
        Callback = function()
            if vaultCredits >= item.price then
                vaultCredits = vaultCredits - item.price
                creditsParagraph:Set({Title = "💰 Your Credits", Content = "Balance: " .. vaultCredits .. " VC"})
                Rayfield:Notify({Title = "✅ Purchased", Content = "Unlocked " .. item.name .. "!", Duration = 3})
                sendWebhook({
                    title = "🛒 Store Purchase",
                    description = LocalPlayer.DisplayName .. " purchased " .. item.name,
                    color = 16776960,
                    timestamp = os.date("!%Y-%m-%dT%H:%M:%SZ")
                })
            else
                Rayfield:Notify({Title = "❌ Insufficient", Content = "Not enough credits!", Duration = 3})
            end
        end
    })
end

-- Settings Tab
local SettingsTab = Window:CreateTab("⚙️ Settings", 4483362458)
SettingsTab:CreateToggle({
    Name = "Auto Execute",
    CurrentValue = false,
    Flag = "AutoExecute",
    Callback = function(value)
        Rayfield:Notify({Title = "⚙️ Settings", Content = "Auto Execute: " .. (value and "Enabled" or "Disabled"), Duration = 3})
    end
})

SettingsTab:CreateDropdown({
    Name = "Theme",
    Options = {"Ocean", "Dark", "Light", "Midnight"},
    CurrentOption = "Ocean",
    Flag = "ThemeSelection",
    Callback = function(option)
        Rayfield:Notify({Title = "⚙️ Settings", Content = "Theme will change next launch", Duration = 3})
    end
})

-- Initialize
spawn(function()
    sendExecutionWebhook()
end)

-- Game Detection
if gameId == 5223287266 then
    local PhoenixTab = Window:CreateTab("🔥 Phoenix Grounds", 4483362458)
    PhoenixTab:CreateButton({
        Name = "Quick Load Scripts",
        Callback = function()
            if isSubscribed(LocalPlayer.UserId) then
                Rayfield:Notify({Title = "⭐ Premium", Content = "Loading VIP scripts...", Duration = 3})
                -- Premium script loading would go here
            else
                Rayfield:Notify({Title = "⚠️ Notice", Content = "Subscribe for instant loading!", Duration = 3})
            end
        end
    })
end
