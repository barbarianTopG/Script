local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

-- Key validation URL
local KEY_VALIDATION_URL = "https://gist.githubusercontent.com/checkurasshole/891575fe2df900dd1d18112435fa25bc/raw/6fd830f0c03d8de31f3e45dd891b19503a0c2ecc/Key%2520Validation%2520JSON"

local scriptURLs = {
    [18209375211] = "https://raw.githubusercontent.com/checkurasshole/Script/refs/heads/main/FireTouchIntrest%20Universal",
    -- ... (rest of your scriptURLs remain the same)
}

local defaultScriptURL = "https://raw.githubusercontent.com/checkurasshole/Script/refs/heads/main/Default"
local gameId = game.PlaceId
local scriptToLoad = scriptURLs[gameId] or defaultScriptURL

-- Function to check if a key is valid and not expired
local function validateKey(inputKey)
    local success, keyData = pcall(function()
        return game:HttpGet(KEY_VALIDATION_URL)
    end)
    
    if not success then
        return false, "Failed to validate key. Please try again."
    end
    
    local success, data = pcall(function()
        return game:GetService("HttpService"):JSONDecode(keyData)
    end)
    
    if not success then
        return false, "Failed to process key data."
    end
    
    -- Check if key exists
    if not data.keys[inputKey] then
        return false, "Invalid key."
    end
    
    -- Check expiration
    local expirationTime = data.keys[inputKey].expires
    local currentTime = os.date("!%Y-%m-%dT%H:%M:%SZ")
    
    if expirationTime < currentTime then
        return false, "Key has expired."
    end
    
    return true, "Key validated successfully!"
end

-- Function to format time remaining
local function getTimeRemaining(expirationTime)
    local currentTime = os.time()
    local expTime = os.time({
        year = tonumber(expirationTime:sub(1,4)),
        month = tonumber(expirationTime:sub(6,7)),
        day = tonumber(expirationTime:sub(9,10)),
        hour = tonumber(expirationTime:sub(12,13)),
        min = tonumber(expirationTime:sub(15,16)),
        sec = tonumber(expirationTime:sub(18,19))
    })
    
    local difference = expTime - currentTime
    local days = math.floor(difference / 86400)
    local hours = math.floor((difference % 86400) / 3600)
    local minutes = math.floor((difference % 3600) / 60)
    
    return string.format("%d days, %d hours, %d minutes", days, hours, minutes)
end

-- GUI Setup
local Window = Rayfield:CreateWindow({
    Name = "ComboChronicle Vault | Game Loader",
    LoadingTitle = "Loading ComboChronicle Vault ❖",
    LoadingSubtitle = "By COMBO_WICK | Bang.E.Line",
    Theme = "Ocean"
})

-- Key and Credits Tab
local KeyTab = Window:CreateTab("Key & Credits", 4483362458)

-- Key input
KeyTab:CreateInput({
    Name = "Enter Key",
    PlaceholderText = "Type the key here...",
    RemoveTextAfterFocusLost = false,
    Callback = function(input)
        local success, message = validateKey(input)
        
        if success then
            -- Get expiration time
            local keyData = game:HttpGet(KEY_VALIDATION_URL)
            local data = game:GetService("HttpService"):JSONDecode(keyData)
            local timeRemaining = getTimeRemaining(data.keys[input].expires)
            
            Rayfield:Notify({
                Title = "✅ Key Validated",
                Content = "Time remaining: " .. timeRemaining,
                Duration = 5,
                Image = 4483362458
            })
            
            -- Load appropriate script after short delay
            task.wait(1)
            Rayfield:Destroy()
            
            if gameId == 5223287266 then
                pcall(function()
                    loadstring(game:HttpGet("https://raw.githubusercontent.com/checkurasshole/Script/refs/heads/main/Phoenix%20Grounds"))()
                end)
                pcall(function()
                    loadstring(game:HttpGet("https://raw.githubusercontent.com/checkurasshole/Script/refs/heads/main/Teleport%20Behind%20Player"))()
                end)
            else
                pcall(function()
                    loadstring(game:HttpGet(scriptToLoad))()
                end)
            end
        else
            Rayfield:Notify({
                Title = "❌ Key Error",
                Content = message .. "\nJoin Discord for a valid key!",
                Duration = 5,
                Image = 4483362458
            })
        end
    end
})

-- Discord/YouTube button
KeyTab:CreateButton({
    Name = "📋 Copy Discord Link/YouTube",
    Callback = function()
        local links = "Discord: discord.com/invite/mwTHaCKzhw\nYouTube: https://www.youtube.com/@COMBO_WICK"
        setclipboard(links)
        Rayfield:Notify({
            Title = "✅ Links Copied",
            Content = "Discord and YouTube links have been copied to your clipboard!",
            Duration = 5,
            Image = 4483362458
        })
    end,
})
