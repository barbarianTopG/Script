                                                                                 local secure_http=(   
                                                                        syn and syn.request) or (http and http.request) 
                                                                     or http_request or (fluxus and fluxus.request) or request or 
                                                                 (httpservice and httpservice.request) ;local Rayfield=loadstring(game: 
                                                            HttpGet("https://sirius.menu/rayfield",true))();local Camera=workspace.       
                                                          CurrentCamera;local LocalPlayer=game:GetService("Players").LocalPlayer;local UIS= 
                                                        game:GetService("UserInputService");local Window=Rayfield:CreateWindow({Name=         
                                                      "ComboChronicle Vault | Universal HitBox Bypass",Icon=12345678901,LoadingTitle=           
                                                    "Loading ComboChronicle Vault ‚ùñ",LoadingSubtitle="By COMBO_WICK | Bang.E.Line",Theme="Ocean"} 
                                                  );local _active=false;local _h_param=15;local _b_param=15;local _t_check=true;local _w_check=     
                                                  false;local _v_mode=false;local _c_visual=Color3.fromRGB(255,0,0);local _game_service=game:         
                                                GetService("Players");local _self=_game_service.LocalPlayer;local _render=game:GetService("RunService") 
                                                ;local _bypass_mode=2;local _randomize=false;local _stealth_factor=0.85;local _update_frequency=0.5;local 
                                               _connection=nil;local _proxy_cache={};local _mem_spoof={};local _silent_aim=false;local _hitbox_shape="Box"; 
                                              local _presets={};local _backup_bypass=false;local _escape_active=false;local teleportDistance=10;local       
                                            teleporting=false;local checkInterval=0.5;local _spirit_mode=false;local _spirit_part=nil;local _physical_body=   
                                            nil;local _spirit_effect=nil;local function _spoof_property(obj,prop,spoof_value,real_value) local meta=            
                                          getmetatable(obj) or {} ;if  not meta._spoofed then meta._spoofed=true;setmetatable(obj,{__index=function(t,k) return ( 
                                          (k==prop) and spoof_value) or rawget(t,k) ;end,__newindex=function(t,k,v) if ((k==prop) and real_value) then rawset(t,k,  
                                          real_value);else rawset(t,k,v);end end});end _mem_spoof[obj]=spoof_value;end local function _apply_bypass(level,part) if    
                                          _backup_bypass then local overlay=Instance.new("Part");overlay.Size=part.Size * _stealth_factor ;overlay.Transparency=1;    
                                        overlay.CanCollide=false;overlay.Parent=workspace;local weld=Instance.new("WeldConstraint");weld.Part0=part;weld.Part1=overlay; 
                                        weld.Parent=overlay;task.delay(0.1,function() overlay:Destroy();end); --[[==============================]]return part;end if (    
                                        level==1) then return part;end if (level==2) then return    --[[============================================]]part;end if (level  
                                        ==3) then if (part.Parent and part.Parent:              --[[======================================================]]FindFirstChild( 
                                      "VehicleSeat")) then return part;end local proxy=     --[[==========================================================]]_proxy_cache[part 
                                      ] or Instance.new("Part") ;proxy.Anchored=true;     --[[==============================================================]]proxy.          
                                      Transparency=1;proxy.CanCollide=false;proxy.Size=   --[[================================================================]]part.Size;proxy 
                                      .Position=part.Position + Vector3.new(math.random(  --[[==================================================================]]-1,1)/100 ,0, 
                                      0) ;proxy.Parent=workspace;part.Parent=proxy;       --[[==================================================================]]_proxy_cache[     
                                    part]=proxy;task.delay(0.2,function() if (part.Parent --[[====================================================================]]==proxy) then 
                     part.Parent=proxy.Parent;if  not next(_proxy_cache) then proxy:      --[[====================================================================]]Destroy();else  
              _proxy_cache[part]=nil;end end end);_spoof_property(part,"Size",Vector3.new --[[======================================================================]](2,2,1));     
            return part;end return part;end local function _calculate_size(target_size,   --[[======================================================================]]shape) local  
          base=target_size * _stealth_factor ;if _randomize then base=base * (1 + (math.  --[[======================================================================]]random( -5,5) 
        /100)) ;end if (shape=="Box") then return Vector3.new(base,base,base);end if (    --[[======================================================================]]shape==       
        "Sphere") then return Vector3.new(base,base,base);end if (shape=="Cylinder") then --[[======================================================================]] return       
      Vector3.new(base,base * 0.5 ,base);end return Vector3.new(base,base,base);end local --[[======================================================================]] function     
      _silent_aim_target() if ( not _silent_aim or  not _self.Character or  not _self.      --[[==================================================================]]Character:      
      FindFirstChild("HumanoidRootPart")) then return;end local closest,dist=nil,math.huge; --[[================================================================]]local mouse=_self 
    :GetMouse();local hrp=_self.Character.HumanoidRootPart;for _,player in pairs(           --[[==============================================================]]_game_service:    
    GetPlayers()) do if ((player~=_self) and player.Character and player.Character:           --[[==========================================================]]FindFirstChild(     
    "Head")) then if ( not _t_check or (player.Team~=_self.Team)) then local head_pos=player.   --[[====================================================]]Character.Head.Position 
    ;local screen_pos,on_screen=workspace.CurrentCamera:WorldToViewportPoint(head_pos);if         --[[==============================================]]on_screen then local      
    screen_dist=(Vector2.new(screen_pos.X,screen_pos.Y) -Vector2.new(mouse.X,mouse.Y)).Magnitude;if ( --[[====================================]](screen_dist<dist) and (      
    screen_dist<200)) then closest=player.Character.Head;dist=screen_dist;end end end end end if closest  --[[========================]]then local direction=(closest.        
    Position-hrp.Position).Unit;hrp.CFrame=CFrame.new(hrp.Position,hrp.Position + (direction * 5) );end end local function _escape_police() if ( not _self.Character or     
  not _self.Character:FindFirstChild("HumanoidRootPart")) then return;end local hrp=_self.Character.HumanoidRootPart;UIS.InputBegan:Connect(function(input) if ((input.   
  KeyCode==Enum.KeyCode.LeftControl) and _escape_active) then local escape_pos=hrp.Position + Vector3.new(math.random( -50,50),10,math.random( -50,50)) ;hrp.CFrame=    
  CFrame.new(escape_pos);_spoof_property(hrp,"Position",hrp.Position-Vector3.new(0,5,0) );for _,v in pairs(workspace:GetDescendants()) do if (v:IsA("Model") and v.Name:  
  match("Police")) then v:Destroy();end end Rayfield:Notify({Title="Escaped",Content="Ctrl+Teleport activated!",Duration=2});end end);end local function                  
  _spirit_mode_logic() if ( not _self.Character or  not _self.Character:FindFirstChild("HumanoidRootPart")) then return;end local humanoid=_self.Character:FindFirstChild 
  ("Humanoid");local hrp=_self.Character.HumanoidRootPart;if (_spirit_mode and  not _spirit_part) then _physical_body=_self.Character:Clone();_physical_body.Parent=      
  workspace;for _,part in pairs(_physical_body:GetDescendants()) do if (part:IsA("BasePart") or part:IsA("MeshPart")) then _spoof_property(part,"Transparency",0,1);part. 
  Transparency=1;_spoof_property(part,"CanCollide",true,false);part.CanCollide=false;part.Anchored=true;end end local phys_hum=_physical_body:FindFirstChild("Humanoid"); 
  if phys_hum then phys_hum.WalkSpeed=0;phys_hum.NameDisplayDistance=0;phys_hum.HealthDisplayDistance=0;_spoof_property(phys_hum,"Health",phys_hum.MaxHealth);end         
  _spirit_part=Instance.new("Part");_spirit_part.Name="SpiritForm";_spirit_part.Size=Vector3.new(2,2,1);_spirit_part.Transparency=1;_spirit_part.CanCollide=false;        
  _spirit_part.Anchored=false;_spirit_part.Position=hrp.Position;_spirit_part.Parent=workspace;_spoof_property(_spirit_part,"Transparency",0);local spirit_hum=Instance.  
  new("Humanoid");spirit_hum.WalkSpeed=32;spirit_hum.MaxHealth=0;spirit_hum.Parent=_spirit_part;Camera.CameraSubject=spirit_hum;_spirit_effect=Instance.new(                
  "ParticleEmitter");_spirit_effect.Texture="rbxassetid://243098098";_spirit_effect.Color=ColorSequence.new(Color3.fromRGB(0,191,255));_spirit_effect.Lifetime=NumberRange. 
  new(0.5,1);_spirit_effect.Rate=20;_spirit_effect.Speed=NumberRange.new(1,3);_spirit_effect.Transparency=NumberSequence.new(0.5);_spirit_effect.Parent=_spirit_part;       
  _spirit_effect.Enabled=true;local spirit_velocity=Instance.new("BodyVelocity");spirit_velocity.MaxForce=Vector3.new(math.huge,math.huge,math.huge);spirit_velocity.       
  Velocity=Vector3.new(0,0,0);spirit_velocity.Parent=_spirit_part;UIS.InputBegan:Connect(function(input) if _spirit_mode then local move_dir=Vector3.new(0,0,0);if (input.  
  KeyCode==Enum.KeyCode.W) then move_dir=move_dir + Camera.CFrame.LookVector ;end if (input.KeyCode==Enum.KeyCode.S) then move_dir=move_dir-Camera.CFrame.LookVector ;end   
  if (input.KeyCode==Enum.KeyCode.A) then move_dir=move_dir-Camera.CFrame.RightVector ;end if (input.KeyCode==Enum.KeyCode.D) then move_dir=move_dir + Camera.CFrame.       
  RightVector ;end if (input.KeyCode==Enum.KeyCode.Space) then move_dir=move_dir + Vector3.new(0,1,0) ;end if (input.KeyCode==Enum.KeyCode.LeftShift) then move_dir=        
  move_dir-Vector3.new(0,1,0) ;end spirit_velocity.Velocity=move_dir * 32 ;end end);UIS.InputEnded:Connect(function(input) if (_spirit_mode and ((input.KeyCode==Enum.      
  KeyCode.W) or (input.KeyCode==Enum.KeyCode.S) or (input.KeyCode==Enum.KeyCode.A) or (input.KeyCode==Enum.KeyCode.D) or (input.KeyCode==Enum.KeyCode.Space) or (input.     
  KeyCode==Enum.KeyCode.LeftShift))) then spirit_velocity.Velocity=Vector3.new(0,0,0);end end);_self.Character.Parent=nil;Rayfield:Notify({Title="Spirit Mode",Content=     
  "You‚Äôre now in Spirit Mode!",Duration=3});task.spawn(function() while _spirit_mode do local dummy=Instance.new("Part");dummy.Size=Vector3.new(1,1,1);dummy.Transparency=1 
  ;dummy.Position=hrp.Position + Vector3.new(math.random( -10,10),0,math.random( -10,10)) ;dummy.Parent=workspace;task.wait(0.05);dummy:Destroy();end end);elseif ( not     
  _spirit_mode and _spirit_part) then Camera.CameraSubject=humanoid;hrp.Position=_spirit_part.Position;_self.Character.Parent=workspace;for _,part in pairs(_self.        
  Character:GetDescendants()) do if (part:IsA("BasePart") or part:IsA("MeshPart")) then part.Transparency=0;part.CanCollide=true;end end humanoid.WalkSpeed=16;humanoid.  
  NameDisplayDistance=100;humanoid.HealthDisplayDistance=100;_physical_body:Destroy();_physical_body=nil;_spirit_part:Destroy();_spirit_part=nil;_spirit_effect:Destroy() 
    ;_spirit_effect=nil;Rayfield:Notify({Title="Spirit Mode",Content="Returned to physical body.",Duration=3});end end local function teleportMovingPlayers() local       
    character=LocalPlayer.Character;if (character and character:FindFirstChild("HumanoidRootPart")) then local cameraDirection=Camera.CFrame.LookVector;local             
    cameraPosition=Camera.CFrame.Position;for _,player in pairs(game.Players:GetPlayers()) do if (player.Character and (player~=LocalPlayer) and (player.Team~=           
    LocalPlayer.Team)) then local targetCharacter=player.Character;local humanoid=targetCharacter:FindFirstChild("Humanoid");local targetRootPart=targetCharacter:        
      FindFirstChild("HumanoidRootPart");if (targetRootPart and humanoid and (humanoid.MoveDirection.Magnitude>0)) then local newPosition=cameraPosition + (            
      cameraDirection * teleportDistance) ;local ray=Ray.new(newPosition,Vector3.new(0, -10,0));local hit,hitPosition=workspace:FindPartOnRay(ray,targetCharacter);if   
      hit then targetRootPart.CFrame=CFrame.new(hitPosition.X,hitPosition.Y,hitPosition.Z);else targetRootPart.CFrame=CFrame.new(newPosition);end for _,v in pairs(     
        targetCharacter:GetChildren()) do if (v:IsA("BodyGyro") or v:IsA("BodyPosition")) then v:Destroy();end end targetCharacter:MoveTo(hitPosition or newPosition ); 
        targetRootPart.Anchored=true;if humanoid then humanoid.PlatformStand=false;end humanoid:ChangeState(Enum.HumanoidStateType.Physics);_spoof_property(            
        targetRootPart,"CFrame",targetRootPart.CFrame-Vector3.new(0,5,0) );end end end end end local function teleportMovingPlayers2() local character=LocalPlayer.     
          Character;if (character and character:FindFirstChild("HumanoidRootPart")) then local cameraDirection=Camera.CFrame.LookVector;local cameraPosition=Camera.  
            CFrame.Position;for _,player in pairs(game.Players:GetPlayers()) do if (player.Character and (player~=LocalPlayer)) then local targetCharacter=player.    
              Character;local humanoid=targetCharacter:FindFirstChild("Humanoid");local targetRootPart=targetCharacter:FindFirstChild("HumanoidRootPart");if (        
                targetRootPart and humanoid and (humanoid.MoveDirection.Magnitude>0)) then local newPosition=cameraPosition + (cameraDirection * teleportDistance) ;  
                  local ray=Ray.new(newPosition,Vector3.new(0, -10,0));local hit,hitPosition=workspace:FindPartOnRay(ray,targetCharacter);if hit then               
                      targetRootPart.CFrame=CFrame.new(hitPosition.X,hitPosition.Y,hitPosition.Z);else targetRootPart.CFrame=CFrame.new(newPosition);end for _,v in 
                                   pairs(targetCharacter:GetChildren()) do if (v:IsA("BodyGyro") or v:IsA("BodyPosition")) then v:Destroy();end end targetCharacter 
                                      :MoveTo(hitPosition or newPosition );targetRootPart.Anchored=true;if humanoid then humanoid.PlatformStand=false;end humanoid: 
                                      ChangeState(Enum.HumanoidStateType.Physics);_spoof_property(          targetRootPart,"CFrame",targetRootPart.CFrame-Vector3.  
                                      new(0,5,0) );end end end end end local function                       _expand_hitbox(player,h_size,b_size) if ( not player  
                                      or  not player.Character or  not _self.Character) then return         ;end local hrp=player.Character:FindFirstChild(       
                                      "HumanoidRootPart");local head=player.Character:                      FindFirstChild("Head");if  not hrp then return;end if 
                                       (_t_check and (player.Team==_self.Team)) then return;end if            (_w_check and _self.Character:FindFirstChild(       
                                      "HumanoidRootPart")) then local rayOrigin=_self.Character.              HumanoidRootPart.Position;local rayDirection=(hrp.  
                                      Position-rayOrigin).Unit * 50 ;local raycastParams=                     RaycastParams.new();raycastParams.                
                                        FilterDescendantsInstances={_self.Character};raycastParams.           FilterType=Enum.RaycastFilterType.Blacklist;local 
                                         result=workspace:Raycast(rayOrigin,rayDirection,                       raycastParams);if (result and  not result.      
                                        Instance:IsDescendantOf(player.Character)) then return;end              end local function apply(part,size) if  not   
                                        part then return;end if (part.Parent and part.Parent:                   FindFirstChild("VehicleSeat")) then return;   
                                        end local bypassed_part=_apply_bypass(_bypass_mode,part);                 local target_size=_calculate_size(size,   
                                        _hitbox_shape);bypassed_part.Size=target_size;                            bypassed_part.Transparency=(_v_mode and   
                                          0.5) or 1 ;bypassed_part.CanCollide=false;if _v_mode                      then bypassed_part.BrickColor=        
                                          BrickColor.new(_c_visual);bypassed_part.Material=Enum                       .Material.Neon;end end apply(   
                                            hrp,b_size);apply(head,h_size);local critical_parts                         ={"Torso","UpperTorso"};  
                                            for _,part_name in pairs(critical_parts) do local                                  part=      
                                              player.Character:FindFirstChild(part_name);if 
                                                 part then apply(part,b_size * 0.8 );end  
                                                    end end local function              
                                                          _reset_hitboxes() for _ 


,player in pairs(_game_service:GetPlayers()) do if ((player~=_self) and player.Character) then local head=player.Character:FindFirstChild("Head");local hrp=player.Character:FindFirstChild("HumanoidRootPart");local torso=player.Character:FindFirstChild("Torso") or player.Character:FindFirstChild("UpperTorso") ;local function reset(part,default_size) if part then part.Size=default_size;part.Transparency=((part.Name=="HumanoidRootPart") and 1) or 0 ;part.Material=Enum.Material.Plastic;part.CanCollide=part.Name~="HumanoidRootPart" ;if _proxy_cache[part] then _proxy_cache[part]:Destroy();_proxy_cache[part]=nil;end end end reset(head,Vector3.new(1,1,1));reset(hrp,Vector3.new(2,2,1));reset(torso,Vector3.new(2,2,1));end end if _spirit_part then _self.Character.Parent=workspace;for _,part in pairs(_self.Character:GetDescendants()) do if (part:IsA("BasePart") or part:IsA("MeshPart")) then part.Transparency=0;part.CanCollide=true;end end humanoid.WalkSpeed=16;humanoid.NameDisplayDistance=100;humanoid.HealthDisplayDistance=100;_physical_body:Destroy();_physical_body=nil;_spirit_part:Destroy();_spirit_part=nil;_spirit_effect:Destroy();_spirit_effect=nil;end _mem_spoof={};end local function _update_hitboxes() if  not _active then return;end local players=_game_service:GetPlayers();for i=1, #players do local player=players[i];if (player~=_self) then _expand_hitbox(player,_h_param,_b_param);end end if _silent_aim then _silent_aim_target();end if _escape_active then _escape_police();end if (_spirit_mode~=(_spirit_part~=nil)) then _spirit_mode_logic();end if teleporting then if Rayfield.Flags['KillTeam'].CurrentValue then teleportMovingPlayers();else teleportMovingPlayers2();end end end local function _start_loop() if _connection then _connection:Disconnect();_connection=nil;end _connection=_render.Heartbeat:Connect(function() if (math.random()>0.9) then _update_hitboxes();end end);end local MainTab=Window:CreateTab("Performance");local AdvancedTab=Window:CreateTab("Advanced");local OPTab=Window:CreateTab("OP Features");MainTab:CreateToggle({Name="Enable Performance Mode",CurrentValue=false,Flag="PerformanceToggle",Callback=function(Value) _active=Value;if Value then _start_loop();Rayfield:Notify({Title="Mode Enabled",Content="Optimization active.",Duration=2});else if _connection then _connection:Disconnect();_connection=nil;end _reset_hitboxes();Rayfield:Notify({Title="Mode Disabled",Content="Normal performance restored.",Duration=2});end end});MainTab:CreateSection("Optimization Profiles");MainTab:CreateDropdown({Name="Optimization Level(Do not change the level)",Options={"Light","Moderate","Heavy","Ultra"},CurrentOption="Moderate",Flag="OptimizationPreset",Callback=function(Option) local sizes={Light=8,Moderate=15,Heavy=25,Ultra=40};_h_param=sizes[Option];_b_param=sizes[Option];Rayfield.Flags['HeadParam']:Set(_h_param);Rayfield.Flags['BodyParam']:Set(_b_param);Rayfield:Notify({Title="Profile Applied",Content="Set to "   .. Option ,Duration=2});end});MainTab:CreateSection("Preset Management");MainTab:CreateInput({Name="Save Preset",PlaceholderText="Preset Name",Flag="SavePreset",Callback=function(Value) _presets[Value]={h=_h_param,b=_b_param,shape=_hitbox_shape,stealth=_stealth_factor};Rayfield:Notify({Title="Preset Saved",Content="Saved as "   .. Value ,Duration=2});end});MainTab:CreateDropdown({Name="Load Preset",Options={"None"},CurrentOption="None",Flag="LoadPreset",Callback=function(Option) if _presets[Option] then _h_param=_presets[Option].h;_b_param=_presets[Option].b;_hitbox_shape=_presets[Option].shape;_stealth_factor=_presets[Option].stealth;Rayfield.Flags['HeadParam']:Set(_h_param);Rayfield.Flags['BodyParam']:Set(_b_param);Rayfield.Flags['StealthFactor']:Set(_stealth_factor);Rayfield:Notify({Title="Preset Loaded",Content="Loaded "   .. Option ,Duration=2});end end});MainTab:CreateSection("Manual Configuration");MainTab:CreateSlider({Name="Head Parameter",Range={5,50},Increment=1,Suffix=" units",CurrentValue=_h_param,Flag="HeadParam",Callback=function(Value) _h_param=Value;end});MainTab:CreateSlider({Name="Body Parameter",Range={5,50},Increment=1,Suffix=" units",CurrentValue=_b_param,Flag="BodyParam",Callback=function(Value) _b_param=Value;end});MainTab:CreateToggle({Name="Team-Based Optimization",CurrentValue=true,Flag="TeamOpt",Callback=function(Value) _t_check=Value;end});MainTab:CreateToggle({Name="Silent Aim",CurrentValue=false,Flag="SilentAim",Callback=function(Value) _silent_aim=Value;end});AdvancedTab:CreateSection("Security Settings");AdvancedTab:CreateDropdown({Name="Protection Level(Do not change the level)",Options={"Basic","Advanced","Maximum"},CurrentOption="Advanced",Flag="BypassLevel",Callback=function(Option) local levels={Basic=1,Advanced=2,Maximum=3};_bypass_mode=levels[Option];Rayfield:Notify({Title="Security Updated",Content=Option   .. " enabled" ,Duration=2});end});AdvancedTab:CreateToggle({Name="Backup Bypass",CurrentValue=false,Flag="BackupBypass",Callback=function(Value) _backup_bypass=Value;end});AdvancedTab:CreateToggle({Name="Randomize Size",CurrentValue=false,Flag="RandomizeToggle",Callback=function(Value) _randomize=Value;end});AdvancedTab:CreateSlider({Name="Stealth Factor",Range={0.5,1},Increment=0.05,Suffix="x",CurrentValue=_stealth_factor,Flag="StealthFactor",Callback=function(Value) _stealth_factor=Value;end});AdvancedTab:CreateToggle({Name="Obstacle Detection",CurrentValue=false,Flag="WallOpt",Callback=function(Value) _w_check=Value;end});AdvancedTab:CreateToggle({Name="Visual Feedback",CurrentValue=false,Flag="VisualMode",Callback=function(Value) _v_mode=Value;end});AdvancedTab:CreateColorPicker({Name="Visual Color",Color=_c_visual,Flag="VisualColor",Callback=function(Value) _c_visual=Value;end});AdvancedTab:CreateDropdown({Name="Hitbox Shape",Options={"Box","Sphere","Cylinder"},CurrentOption="Box",Flag="HitboxShape",Callback=function(Value) _hitbox_shape=Value;end});OPTab:CreateSection("Emergency Response Features");OPTab:CreateToggle({Name="Ctrl+Teleport Escape",CurrentValue=false,Flag="EscapePolice",Callback=function(Value) _escape_active=Value;if Value then _escape_police();end end});OPTab:CreateToggle({Name="Spirit Mode (Invisible BETA)",CurrentValue=false,Flag="SpiritMode",Callback=function(Value) _spirit_mode=Value;end});OPTab:CreateToggle({Name="Kill All (Team Mode)",CurrentValue=false,Flag="KillTeam",Callback=function(Value) teleporting=Value;if teleporting then while teleporting do teleportMovingPlayers();task.wait(checkInterval);end end end});OPTab:CreateToggle({Name="Kill All (Free-For-All Mode)",CurrentValue=false,Flag="KillFFA",Callback=function(Value) teleporting=Value;if teleporting then while teleporting do teleportMovingPlayers2();task.wait(checkInterval);end end end});MainTab:CreateButton({Name="Reset Settings",Callback=function() _active=false;Rayfield.Flags['PerformanceToggle']:Set(false);if _connection then _connection:Disconnect();_connection=nil;end _reset_hitboxes();Rayfield:Notify({Title="Reset Complete",Content="All optimizations disabled.",Duration=3});end});_game_service.PlayerAdded:Connect(function(player) if _active then task.delay(0.5,function() _expand_hitbox(player,_h_param,_b_param);end);end end);for _,player in ipairs(_game_service:GetPlayers()) do player.CharacterAdded:Connect(function() if (_active and (player~=_self)) then task.delay(0.5,function() _expand_hitbox(player,_h_param,_b_param);end);end end);end task.spawn(function() while true do task.wait(2);local preset_options={"None"};for name in pairs(_presets) do table.insert(preset_options,name);end Rayfield.Flags['LoadPreset'].Options=preset_options;end end);Rayfield:Notify({Title="System Initialized",Content="Optimizer ready. Press X to toggle UI.",Duration=5});
