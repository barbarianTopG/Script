-- Initialize the current gameId based on the current PlaceId
local gameId = game.PlaceId

-- A table that maps PlaceIds to the corresponding script URLs
local scriptURLs = {
    [18209375211] = {  -- Game 1
        "https://raw.githubusercontent.com/checkurasshole/Script/refs/heads/main/FireTouchIntrest%20Universal",  -- Script 1
    },
    [14518422161] = {  -- Game 2
        "https://raw.githubusercontent.com/checkurasshole/Script/refs/heads/main/Hitbox%20Gunfight%20Arena",  -- Script 1
    },
    [155615604] = {  -- Game 3
        "https://raw.githubusercontent.com/checkurasshole/Script/refs/heads/main/Prison%20Life",  -- Script 1
    },
    [76455837887178] = {  -- Game 4
        "https://raw.githubusercontent.com/checkurasshole/Script/refs/heads/main/Dig%20it(Auto-Dig%20%2B%20more%20coming)",  -- Script 1
    },
    [2000062521] = {  -- Game 5 (multiple scripts for this game)
        "https://raw.githubusercontent.com/checkurasshole/Script/refs/heads/main/State%20Of%20Anarchy%20(In-Progress)",  -- Script 1
        "https://raw.githubusercontent.com/checkurasshole/Script/refs/heads/main/Teleport%20Behind%20Player"  -- Script 2
    },
}

-- Default script if no matching PlaceId is found
local defaultScriptURL = "https://raw.githubusercontent.com/checkurasshole/Script/refs/heads/main/Default"

-- Function to load scripts based on the current gameId (PlaceId)
local function loadScripts()
    -- Get the list of scripts for the current PlaceId
    local scriptsToLoad = scriptURLs[gameId] or {defaultScriptURL}

    -- Loop through and load each script for the current PlaceId
    for _, scriptURL in ipairs(scriptsToLoad) do
        local success, err = pcall(function()
            loadstring(game:HttpGet(scriptURL))()
        end)
        
        if not success then
            warn("Failed to load script: " .. err)
        end
    end
end

-- Load scripts initially when the game starts
loadScripts()

-- Event listener for when PlaceId changes (teleportation happens)
game:GetService("Players").PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function(character)
        -- Wait for the character's appearance to fully load before checking PlaceId
        character:WaitForChild("HumanoidRootPart")

        -- Ensure the gameId is updated upon teleportation
        gameId = game.PlaceId
        loadScripts()  -- Reload the scripts when PlaceId changes
    end)
end)

-- You could also continuously check PlaceId at regular intervals (optional)
while true do
    wait(5)  -- Wait for 5 seconds between checks
    if game.PlaceId ~= gameId then
        gameId = game.PlaceId  -- Update the gameId if PlaceId changes
        loadScripts()  -- Reload scripts if PlaceId changes
    end
end
