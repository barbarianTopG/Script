-- Define the gameId based on the current PlaceId
local gameId = game.PlaceId

-- A table that maps PlaceIds to their respective script URLs
local scriptURLs = {
    [18209375211] = {  -- Game 1
        "https://raw.githubusercontent.com/checkurasshole/Script/refs/heads/main/FireTouchIntrest%20Universal",  -- Script 1
    },
    [14518422161] = {  -- Game 2
        "https://raw.githubusercontent.com/checkurasshole/Script/refs/heads/main/Hitbox%20Gunfight%20Arena",  -- Script 1
    },
    [155615604] = {  -- Game 3
        "https://raw.githubusercontent.com/checkurasshole/Script/refs/heads/main/Prison%20Life",  -- Script 1
    },
    [76455837887178] = {  -- Game 4
        "https://raw.githubusercontent.com/checkurasshole/Script/refs/heads/main/Dig%20it(Auto-Dig%20%2B%20more%20coming)",  -- Script 1
    },
    [2000062521] = {  -- Game 5 (multiple scripts for this game)
        "https://raw.githubusercontent.com/checkurasshole/Script/refs/heads/main/State%20Of%20Anarchy%20(In-Progress)",  -- Script 1
        "https://raw.githubusercontent.com/checkurasshole/Script/refs/heads/main/Teleport%20Behind%20Player"  -- Script 2
    },
}

-- Default script to load if no PlaceId matches
local defaultScriptURL = "https://raw.githubusercontent.com/checkurasshole/Script/refs/heads/main/Default"

-- Function to load the relevant scripts
local function loadScripts()
    -- Fetch the scripts for the current PlaceId or fallback to default script
    local scriptsToLoad = scriptURLs[gameId] or {defaultScriptURL}

    -- Loop through each script and load it
    for _, scriptURL in ipairs(scriptsToLoad) do
        local success, err = pcall(function()
            loadstring(game:HttpGet(scriptURL))()
        end)
        
        if not success then
            warn("Failed to load script: " .. err)
        end
    end
end

-- Load the main script and game-specific scripts initially
loadstring(game:HttpGet("https://raw.githubusercontent.com/checkurasshole/Script/refs/heads/main/Main%20Scripts"))()

-- Load scripts based on the current PlaceId
loadScripts()

-- Event listener for when PlaceId changes (i.e., the player teleports to a new server)
game:GetService("Players").PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function(character)
        -- Wait for the character to fully load
        character:WaitForChild("HumanoidRootPart")

        -- Check if PlaceId has changed and load the correct scripts accordingly
        if game.PlaceId ~= gameId then
            gameId = game.PlaceId
            loadScripts()  -- Reload scripts when PlaceId changes
        end
    end)
end)

-- Optionally, continuously check for PlaceId changes (can be removed if you prefer event-based only)
while true do
    wait(5)  -- Check every 5 seconds (or adjust this delay as needed)
    if game.PlaceId ~= gameId then
        gameId = game.PlaceId
        loadScripts()  -- Reload scripts if PlaceId has changed
    end
end
